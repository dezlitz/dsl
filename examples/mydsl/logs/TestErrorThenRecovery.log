Line 1:
Parsing: github.com/madlitz/dsl/examples/mydsl.Parse
Expect Token (Multiple ): [WS VARIABLE EOF]
	Scanning: github.com/madlitz/dsl/examples/mydsl.Scan
	Expect (Optional ) Rune: [WS TAB] Range: []
	Expect () Rune: [- + * / ( ) NL : ' " EOF] Range: [0-9 A-Z a-z] Pos:1 Found: a
		Scanning: github.com/madlitz/dsl/examples/mydsl.variable
		Expect (Optional Multiple ) Rune: [_] Range: [A-Z a-z]
		Matched: VARIABLE - a
		Returning: github.com/madlitz/dsl/examples/mydsl.variable
	Expect (Optional Multiple ) Rune: [WS TAB] Range: [] Pos:2 Found: WS
	Returning: github.com/madlitz/dsl/examples/mydsl.Scan
Found: VARIABLE
	Parsing: github.com/madlitz/dsl/examples/mydsl.assignmentOrCall
	Expect Token (Optional ): [WS]
		Scanning: github.com/madlitz/dsl/examples/mydsl.Scan
		Expect (Optional ) Rune: [WS TAB] Range: []
		Expect () Rune: [- + * / ( ) NL : ' " EOF] Range: [0-9 A-Z a-z] Pos:3 Found: :
			Scanning: github.com/madlitz/dsl/examples/mydsl.assign
			Expect () Rune: [=] Range: [] Pos:4 Found: =
			Matched: ASSIGN - :=
			Returning: github.com/madlitz/dsl/examples/mydsl.assign
		Expect (Optional Multiple ) Rune: [WS TAB] Range: [] Pos:5 Found: WS
		Returning: github.com/madlitz/dsl/examples/mydsl.Scan
	Expect Token (): [ASSIGN OPEN_PAREN]
	Found: ASSIGN
		Parsing: github.com/madlitz/dsl/examples/mydsl.assignment
		AST Skip Token: ASSIGN - :=,
		AST Add Node: ASSIGNMENT
		AST Add Tokens: VARIABLE - a,
		Expect Token (Optional ): [WS]
			Scanning: github.com/madlitz/dsl/examples/mydsl.Scan
			Expect (Optional ) Rune: [WS TAB] Range: []
			Expect () Rune: [- + * / ( ) NL : ' " EOF] Range: [0-9 A-Z a-z] Pos:6 Found: 1
				Scanning: github.com/madlitz/dsl/examples/mydsl.literal
				Expect (Optional Multiple ) Rune: [] Range: [0-9]
				Expect (Optional ) Rune: [.] Range: []
				Matched: LITERAL - 1
				Returning: github.com/madlitz/dsl/examples/mydsl.literal
			Expect (Optional Multiple ) Rune: [WS TAB] Range: [] Pos:7 Found: WS
			Returning: github.com/madlitz/dsl/examples/mydsl.Scan
		Expect Token (): [VARIABLE LITERAL OPEN_PAREN]
		Found: LITERAL
			Parsing: github.com/madlitz/dsl/examples/mydsl.operator
			AST Add Node: TERMINAL
			AST Add Tokens: LITERAL - 1,
			AST Walk Up
			Expect Token (Optional ): [WS]
				Scanning: github.com/madlitz/dsl/examples/mydsl.Scan
				Expect (Optional ) Rune: [WS TAB] Range: []
				Expect () Rune: [- + * / ( ) NL : ' " EOF] Range: [0-9 A-Z a-z] Pos:8 Found: *
				Matched: MULTIPLY - *
				Expect (Optional Multiple ) Rune: [WS TAB] Range: [] Pos:9 Found: WS
				Returning: github.com/madlitz/dsl/examples/mydsl.Scan
			Expect Token (Optional ): [PLUS MINUS DIVIDE MULTIPLY OPEN_PAREN]
			Found: MULTIPLY
				Parsing: github.com/madlitz/dsl/examples/mydsl.expression
				AST Add Node: EXPRESSION
				AST Add Tokens: MULTIPLY - *,
				Expect Token (Optional ): [WS]
					Scanning: github.com/madlitz/dsl/examples/mydsl.Scan
					Expect (Optional ) Rune: [WS TAB] Range: []
					Expect () Rune: [- + * / ( ) NL : ' " EOF] Range: [0-9 A-Z a-z] Pos:10 Found: 5
						Scanning: github.com/madlitz/dsl/examples/mydsl.literal
						Expect (Optional Multiple ) Rune: [] Range: [0-9]
						Expect (Optional ) Rune: [.] Range: []
						Matched: LITERAL - 5
						Returning: github.com/madlitz/dsl/examples/mydsl.literal
					Expect (Optional Multiple ) Rune: [WS TAB] Range: [] Pos:11 Found: WS
					Returning: github.com/madlitz/dsl/examples/mydsl.Scan
				Expect Token (): [VARIABLE LITERAL OPEN_PAREN CLOSE_PAREN]
				Found: LITERAL
					Parsing: github.com/madlitz/dsl/examples/mydsl.operator
					AST Add Node: TERMINAL
					AST Add Tokens: LITERAL - 5,
					AST Walk Up
					Expect Token (Optional ): [WS]
						Scanning: github.com/madlitz/dsl/examples/mydsl.Scan
						Expect (Optional ) Rune: [WS TAB] Range: []
						Expect () Rune: [- + * / ( ) NL : ' " EOF] Range: [0-9 A-Z a-z] Pos:12 Found: +
						Matched: PLUS - +
						Expect (Optional Multiple ) Rune: [WS TAB] Range: [] Pos:13 Found: WS
						Returning: github.com/madlitz/dsl/examples/mydsl.Scan
					Expect Token (Optional ): [PLUS MINUS DIVIDE MULTIPLY OPEN_PAREN]
					Found: PLUS
						Parsing: github.com/madlitz/dsl/examples/mydsl.expression
						AST Add Node: EXPRESSION
						AST Add Tokens: PLUS - +,
						Expect Token (Optional ): [WS]
							Scanning: github.com/madlitz/dsl/examples/mydsl.Scan
							Expect (Optional ) Rune: [WS TAB] Range: []
							Expect () Rune: [- + * / ( ) NL : ' " EOF] Range: [0-9 A-Z a-z] Pos:14 Found: 7
								Scanning: github.com/madlitz/dsl/examples/mydsl.literal
								Expect (Optional Multiple ) Rune: [] Range: [0-9]
								Expect (Optional ) Rune: [.] Range: []
								Matched: LITERAL - 7
								Returning: github.com/madlitz/dsl/examples/mydsl.literal
							Expect (Optional Multiple ) Rune: [WS TAB] Range: []
							Returning: github.com/madlitz/dsl/examples/mydsl.Scan
						Expect Token (): [VARIABLE LITERAL OPEN_PAREN CLOSE_PAREN]
						Found: LITERAL
							Parsing: github.com/madlitz/dsl/examples/mydsl.operator
							AST Add Node: TERMINAL
							AST Add Tokens: LITERAL - 7,
							AST Walk Up
							Expect Token (Optional ): [WS]
								Scanning: github.com/madlitz/dsl/examples/mydsl.Scan
								Expect (Optional ) Rune: [WS TAB] Range: []
								Expect () Rune: [- + * / ( ) NL : ' " EOF] Range: [0-9 A-Z a-z] Pos:15 Found: NL
Line 2:
								Matched: NL - NL
								Expect (Optional Multiple ) Rune: [WS TAB] Range: []
								Returning: github.com/madlitz/dsl/examples/mydsl.Scan
							Expect Token (Optional ): [PLUS MINUS DIVIDE MULTIPLY OPEN_PAREN]
							AST Walk Up
							Returning: github.com/madlitz/dsl/examples/mydsl.operator
						Returning: github.com/madlitz/dsl/examples/mydsl.expression
					AST Walk Up
					Returning: github.com/madlitz/dsl/examples/mydsl.operator
				Returning: github.com/madlitz/dsl/examples/mydsl.expression
			AST Walk Up
			Returning: github.com/madlitz/dsl/examples/mydsl.operator
		Returning: github.com/madlitz/dsl/examples/mydsl.assignment
	Expect Token (Optional ): [WS]
	Expect Token (Optional ): [COMMENT]
	Expect Token (): [NL EOF]
	Found: NL
		Parsing: github.com/madlitz/dsl/examples/mydsl.skipWhitespace
		AST Skip Token: NL - NL,
		Returning: github.com/madlitz/dsl/examples/mydsl.skipWhitespace
	Returning: github.com/madlitz/dsl/examples/mydsl.assignmentOrCall
	Scanning: github.com/madlitz/dsl/examples/mydsl.Scan
	Expect (Optional ) Rune: [WS TAB] Range: []
	Expect () Rune: [- + * / ( ) NL : ' " EOF] Range: [0-9 A-Z a-z] Pos:1 Found: b
		Scanning: github.com/madlitz/dsl/examples/mydsl.variable
		Expect (Optional Multiple ) Rune: [_] Range: [A-Z a-z]
		Matched: VARIABLE - b
		Returning: github.com/madlitz/dsl/examples/mydsl.variable
	Expect (Optional Multiple ) Rune: [WS TAB] Range: [] Pos:2 Found: WS
	Returning: github.com/madlitz/dsl/examples/mydsl.Scan
Found: VARIABLE
	Parsing: github.com/madlitz/dsl/examples/mydsl.assignmentOrCall
	Expect Token (Optional ): [WS]
		Scanning: github.com/madlitz/dsl/examples/mydsl.Scan
		Expect (Optional ) Rune: [WS TAB] Range: []
		Expect () Rune: [- + * / ( ) NL : ' " EOF] Range: [0-9 A-Z a-z] Pos:3 Found: :
			Scanning: github.com/madlitz/dsl/examples/mydsl.assign
			Expect () Rune: [=] Range: [] Pos:4 Found: =
			Matched: ASSIGN - :=
			Returning: github.com/madlitz/dsl/examples/mydsl.assign
		Expect (Optional Multiple ) Rune: [WS TAB] Range: [] Pos:5 Found: WS
		Returning: github.com/madlitz/dsl/examples/mydsl.Scan
	Expect Token (): [ASSIGN OPEN_PAREN]
	Found: ASSIGN
		Parsing: github.com/madlitz/dsl/examples/mydsl.assignment
		AST Skip Token: ASSIGN - :=,
		AST Add Node: ASSIGNMENT
		AST Add Tokens: VARIABLE - b,
		Expect Token (Optional ): [WS]
			Scanning: github.com/madlitz/dsl/examples/mydsl.Scan
			Expect (Optional ) Rune: [WS TAB] Range: []
			Expect () Rune: [- + * / ( ) NL : ' " EOF] Range: [0-9 A-Z a-z] Pos:6 Found: 3
				Scanning: github.com/madlitz/dsl/examples/mydsl.literal
				Expect (Optional Multiple ) Rune: [] Range: [0-9]
				Expect (Optional ) Rune: [.] Range: [] Pos:7 Found: .
					Scanning: github.com/madlitz/dsl/examples/mydsl.fraction
					Expect (Multiple ) Rune: [] Range: [0-9] Pos:8 Found: 4, 5
					Matched: LITERAL - 3.45
					Returning: github.com/madlitz/dsl/examples/mydsl.fraction
				Returning: github.com/madlitz/dsl/examples/mydsl.literal
			Expect (Optional Multiple ) Rune: [WS TAB] Range: [] Pos:10 Found: WS
			Returning: github.com/madlitz/dsl/examples/mydsl.Scan
		Expect Token (): [VARIABLE LITERAL OPEN_PAREN]
		Found: LITERAL
			Parsing: github.com/madlitz/dsl/examples/mydsl.operator
			AST Add Node: TERMINAL
			AST Add Tokens: LITERAL - 3.45,
			AST Walk Up
			Expect Token (Optional ): [WS]
				Scanning: github.com/madlitz/dsl/examples/mydsl.Scan
				Expect (Optional ) Rune: [WS TAB] Range: []
				Expect () Rune: [- + * / ( ) NL : ' " EOF] Range: [0-9 A-Z a-z] Pos:11 Found: *
				Matched: MULTIPLY - *
				Expect (Optional Multiple ) Rune: [WS TAB] Range: [] Pos:12 Found: WS
				Returning: github.com/madlitz/dsl/examples/mydsl.Scan
			Expect Token (Optional ): [PLUS MINUS DIVIDE MULTIPLY OPEN_PAREN]
			Found: MULTIPLY
				Parsing: github.com/madlitz/dsl/examples/mydsl.expression
				AST Add Node: EXPRESSION
				AST Add Tokens: MULTIPLY - *,
				Expect Token (Optional ): [WS]
					Scanning: github.com/madlitz/dsl/examples/mydsl.Scan
					Expect (Optional ) Rune: [WS TAB] Range: []
					Expect () Rune: [- + * / ( ) NL : ' " EOF] Range: [0-9 A-Z a-z] Pos:13 Found: 4
						Scanning: github.com/madlitz/dsl/examples/mydsl.literal
						Expect (Optional Multiple ) Rune: [] Range: [0-9] Pos:14 Found: 4
						Expect (Optional ) Rune: [.] Range: [] Pos:15 Found: .
							Scanning: github.com/madlitz/dsl/examples/mydsl.fraction
							Expect (Multiple ) Rune: [] Range: [0-9] Pos:16 Found: 2, 1
							Matched: LITERAL - 44.21
							Returning: github.com/madlitz/dsl/examples/mydsl.fraction
						Returning: github.com/madlitz/dsl/examples/mydsl.literal
					Expect (Optional Multiple ) Rune: [WS TAB] Range: [] Pos:18 Found: WS
					Returning: github.com/madlitz/dsl/examples/mydsl.Scan
				Expect Token (): [VARIABLE LITERAL OPEN_PAREN CLOSE_PAREN]
				Found: LITERAL
					Parsing: github.com/madlitz/dsl/examples/mydsl.operator
					AST Add Node: TERMINAL
					AST Add Tokens: LITERAL - 44.21,
					AST Walk Up
					Expect Token (Optional ): [WS]
						Scanning: github.com/madlitz/dsl/examples/mydsl.Scan
						Expect (Optional ) Rune: [WS TAB] Range: []
						Expect () Rune: [- + * / ( ) NL : ' " EOF] Range: [0-9 A-Z a-z] Pos:19 Found: /
						Matched: DIVIDE - /
						Expect (Optional Multiple ) Rune: [WS TAB] Range: [] Pos:20 Found: WS
						Returning: github.com/madlitz/dsl/examples/mydsl.Scan
					Expect Token (Optional ): [PLUS MINUS DIVIDE MULTIPLY OPEN_PAREN]
					Found: DIVIDE
						Parsing: github.com/madlitz/dsl/examples/mydsl.expression
						AST Add Node: EXPRESSION
						AST Add Tokens: DIVIDE - /,
						Expect Token (Optional ): [WS]
							Scanning: github.com/madlitz/dsl/examples/mydsl.Scan
							Expect (Optional ) Rune: [WS TAB] Range: []
							Expect () Rune: [- + * / ( ) NL : ' " EOF] Range: [0-9 A-Z a-z] Pos:21 Found: (
							Matched: OPEN_PAREN - (
							Expect (Optional Multiple ) Rune: [WS TAB] Range: []
							Returning: github.com/madlitz/dsl/examples/mydsl.Scan
						Expect Token (): [VARIABLE LITERAL OPEN_PAREN CLOSE_PAREN]
						Found: OPEN_PAREN
							Parsing: github.com/madlitz/dsl/examples/mydsl.parenExpression
							Peek: [[], ]
								Parsing: github.com/madlitz/dsl/examples/mydsl.expression
								AST Add Node: EXPRESSION
								AST Add Tokens: OPEN_PAREN - (,
								Expect Token (Optional ): [WS]
									Scanning: github.com/madlitz/dsl/examples/mydsl.Scan
									Expect (Optional ) Rune: [WS TAB] Range: []
									Expect () Rune: [- + * / ( ) NL : ' " EOF] Range: [0-9 A-Z a-z] Pos:22 Found: 4
										Scanning: github.com/madlitz/dsl/examples/mydsl.literal
										Expect (Optional Multiple ) Rune: [] Range: [0-9]
										Expect (Optional ) Rune: [.] Range: []
										Matched: LITERAL - 4
										Returning: github.com/madlitz/dsl/examples/mydsl.literal
									Expect (Optional Multiple ) Rune: [WS TAB] Range: []
									Returning: github.com/madlitz/dsl/examples/mydsl.Scan
								Expect Token (): [VARIABLE LITERAL OPEN_PAREN CLOSE_PAREN]
								Found: LITERAL
									Parsing: github.com/madlitz/dsl/examples/mydsl.operator
									AST Add Node: TERMINAL
									AST Add Tokens: LITERAL - 4,
									AST Walk Up
									Expect Token (Optional ): [WS]
										Scanning: github.com/madlitz/dsl/examples/mydsl.Scan
										Expect (Optional ) Rune: [WS TAB] Range: []
										Expect () Rune: [- + * / ( ) NL : ' " EOF] Range: [0-9 A-Z a-z]
***found [;], expected any of [- + * / ( ) NL : ' " EOF 0-9 A-Z a-z]
										Expect (Optional Multiple ) Rune: [WS TAB] Range: []
										Returning: github.com/madlitz/dsl/examples/mydsl.Scan
									Expect Token (Optional ): [PLUS MINUS DIVIDE MULTIPLY OPEN_PAREN]
									Skipping Expect as error already found.
									AST Walk Up
									Returning: github.com/madlitz/dsl/examples/mydsl.operator
								Returning: github.com/madlitz/dsl/examples/mydsl.expression
							Expect Token (Optional ): [WS]
							Skipping Expect as error already found.
							Expect Token (): [CLOSE_PAREN]
							Skipping Expect as error already found.
							Recovering....
								Parsing: github.com/madlitz/dsl/examples/mydsl.skipUntilLineBreak
								Expect Token (): [UNKNOWN]
									Scanning: github.com/madlitz/dsl/examples/mydsl.Scan
									Expect (Invert Optional Multiple ) Rune: [EOF NL] Range: [] Pos:23 Found: 4, ;, WS, +, WS, a, ), WS, ', A, WS, S, i, m, p, l, e, WS, E, x, p, r, e, s, s, i, o, n
									Matched: UNKNOWN - 4; + a) 'A Simple Expression
									Returning: github.com/madlitz/dsl/examples/mydsl.Scan
								Found: UNKNOWN
								Returning: github.com/madlitz/dsl/examples/mydsl.skipUntilLineBreak
							Returning: github.com/madlitz/dsl/examples/mydsl.parenExpression
						Returning: github.com/madlitz/dsl/examples/mydsl.expression
					AST Walk Up
					Returning: github.com/madlitz/dsl/examples/mydsl.operator
				Returning: github.com/madlitz/dsl/examples/mydsl.expression
			AST Walk Up
			Returning: github.com/madlitz/dsl/examples/mydsl.operator
		Returning: github.com/madlitz/dsl/examples/mydsl.assignment
	Expect Token (Optional ): [WS]
		Scanning: github.com/madlitz/dsl/examples/mydsl.Scan
		Expect (Optional ) Rune: [WS TAB] Range: []
		Expect () Rune: [- + * / ( ) NL : ' " EOF] Range: [0-9 A-Z a-z] Pos:51 Found: NL
Line 3:
		Matched: NL - NL
		Expect (Optional Multiple ) Rune: [WS TAB] Range: []
		Returning: github.com/madlitz/dsl/examples/mydsl.Scan
	Expect Token (Optional ): [COMMENT]
	Expect Token (): [NL EOF]
	Found: NL
		Parsing: github.com/madlitz/dsl/examples/mydsl.skipWhitespace
		AST Skip Token: NL - NL,
		Returning: github.com/madlitz/dsl/examples/mydsl.skipWhitespace
	Returning: github.com/madlitz/dsl/examples/mydsl.assignmentOrCall
	Scanning: github.com/madlitz/dsl/examples/mydsl.Scan
	Expect (Optional ) Rune: [WS TAB] Range: []
	Expect () Rune: [- + * / ( ) NL : ' " EOF] Range: [0-9 A-Z a-z] Pos:1 Found: d
		Scanning: github.com/madlitz/dsl/examples/mydsl.variable
		Expect (Optional Multiple ) Rune: [_] Range: [A-Z a-z] Pos:2 Found: o, u, b, l, e
		Matched: VARIABLE - double
		Returning: github.com/madlitz/dsl/examples/mydsl.variable
	Expect (Optional Multiple ) Rune: [WS TAB] Range: []
	Returning: github.com/madlitz/dsl/examples/mydsl.Scan
Found: VARIABLE
	Parsing: github.com/madlitz/dsl/examples/mydsl.assignmentOrCall
	Expect Token (Optional ): [WS]
		Scanning: github.com/madlitz/dsl/examples/mydsl.Scan
		Expect (Optional ) Rune: [WS TAB] Range: []
		Expect () Rune: [- + * / ( ) NL : ' " EOF] Range: [0-9 A-Z a-z] Pos:7 Found: (
		Matched: OPEN_PAREN - (
		Expect (Optional Multiple ) Rune: [WS TAB] Range: []
		Returning: github.com/madlitz/dsl/examples/mydsl.Scan
	Expect Token (): [ASSIGN OPEN_PAREN]
	Found: OPEN_PAREN
		Parsing: github.com/madlitz/dsl/examples/mydsl.call
		AST Skip Token: OPEN_PAREN - (,
		AST Add Node: CALL
		AST Add Tokens: UNKNOWN - 4; + a) 'A Simple Expression, VARIABLE - double,
		Expect Token (Optional ): [WS]
			Scanning: github.com/madlitz/dsl/examples/mydsl.Scan
			Expect (Optional ) Rune: [WS TAB] Range: []
			Expect () Rune: [- + * / ( ) NL : ' " EOF] Range: [0-9 A-Z a-z] Pos:8 Found: (
			Matched: OPEN_PAREN - (
			Expect (Optional Multiple ) Rune: [WS TAB] Range: []
			Returning: github.com/madlitz/dsl/examples/mydsl.Scan
		Expect Token (): [VARIABLE LITERAL OPEN_PAREN]
		Found: OPEN_PAREN
			Parsing: github.com/madlitz/dsl/examples/mydsl.parenExpression
			Peek: [[], ]
				Parsing: github.com/madlitz/dsl/examples/mydsl.expression
				AST Add Node: EXPRESSION
				AST Add Tokens: OPEN_PAREN - (,
				Expect Token (Optional ): [WS]
					Scanning: github.com/madlitz/dsl/examples/mydsl.Scan
					Expect (Optional ) Rune: [WS TAB] Range: []
					Expect () Rune: [- + * / ( ) NL : ' " EOF] Range: [0-9 A-Z a-z] Pos:9 Found: a
						Scanning: github.com/madlitz/dsl/examples/mydsl.variable
						Expect (Optional Multiple ) Rune: [_] Range: [A-Z a-z]
						Matched: VARIABLE - a
						Returning: github.com/madlitz/dsl/examples/mydsl.variable
					Expect (Optional Multiple ) Rune: [WS TAB] Range: [] Pos:10 Found: WS
					Returning: github.com/madlitz/dsl/examples/mydsl.Scan
				Expect Token (): [VARIABLE LITERAL OPEN_PAREN CLOSE_PAREN]
				Found: VARIABLE
					Parsing: github.com/madlitz/dsl/examples/mydsl.operator
					AST Add Node: TERMINAL
					AST Add Tokens: VARIABLE - a,
					AST Walk Up
					Expect Token (Optional ): [WS]
						Scanning: github.com/madlitz/dsl/examples/mydsl.Scan
						Expect (Optional ) Rune: [WS TAB] Range: []
						Expect () Rune: [- + * / ( ) NL : ' " EOF] Range: [0-9 A-Z a-z] Pos:11 Found: +
						Matched: PLUS - +
						Expect (Optional Multiple ) Rune: [WS TAB] Range: [] Pos:12 Found: WS
						Returning: github.com/madlitz/dsl/examples/mydsl.Scan
					Expect Token (Optional ): [PLUS MINUS DIVIDE MULTIPLY OPEN_PAREN]
					Found: PLUS
						Parsing: github.com/madlitz/dsl/examples/mydsl.expression
						AST Add Node: EXPRESSION
						AST Add Tokens: PLUS - +,
						Expect Token (Optional ): [WS]
							Scanning: github.com/madlitz/dsl/examples/mydsl.Scan
							Expect (Optional ) Rune: [WS TAB] Range: []
							Expect () Rune: [- + * / ( ) NL : ' " EOF] Range: [0-9 A-Z a-z] Pos:13 Found: b
								Scanning: github.com/madlitz/dsl/examples/mydsl.variable
								Expect (Optional Multiple ) Rune: [_] Range: [A-Z a-z]
								Matched: VARIABLE - b
								Returning: github.com/madlitz/dsl/examples/mydsl.variable
							Expect (Optional Multiple ) Rune: [WS TAB] Range: []
							Returning: github.com/madlitz/dsl/examples/mydsl.Scan
						Expect Token (): [VARIABLE LITERAL OPEN_PAREN CLOSE_PAREN]
						Found: VARIABLE
							Parsing: github.com/madlitz/dsl/examples/mydsl.operator
							AST Add Node: TERMINAL
							AST Add Tokens: VARIABLE - b,
							AST Walk Up
							Expect Token (Optional ): [WS]
								Scanning: github.com/madlitz/dsl/examples/mydsl.Scan
								Expect (Optional ) Rune: [WS TAB] Range: []
								Expect () Rune: [- + * / ( ) NL : ' " EOF] Range: [0-9 A-Z a-z] Pos:14 Found: )
								Matched: CLOSE_PAREN - )
								Expect (Optional Multiple ) Rune: [WS TAB] Range: []
								Returning: github.com/madlitz/dsl/examples/mydsl.Scan
							Expect Token (Optional ): [PLUS MINUS DIVIDE MULTIPLY OPEN_PAREN]
							AST Walk Up
							Returning: github.com/madlitz/dsl/examples/mydsl.operator
						Returning: github.com/madlitz/dsl/examples/mydsl.expression
					AST Walk Up
					Returning: github.com/madlitz/dsl/examples/mydsl.operator
				Returning: github.com/madlitz/dsl/examples/mydsl.expression
			Expect Token (Optional ): [WS]
			Expect Token (): [CLOSE_PAREN]
			Found: CLOSE_PAREN
				Parsing: github.com/madlitz/dsl/examples/mydsl.operator
				AST Add Node: TERMINAL
				AST Add Tokens: CLOSE_PAREN - ),
				AST Walk Up
				Expect Token (Optional ): [WS]
					Scanning: github.com/madlitz/dsl/examples/mydsl.Scan
					Expect (Optional ) Rune: [WS TAB] Range: []
					Expect () Rune: [- + * / ( ) NL : ' " EOF] Range: [0-9 A-Z a-z] Pos:15 Found: EOF
						Scanning: github.com/madlitz/dsl/examples/mydsl.eof
						Matched: EOF - EOF
						Returning: github.com/madlitz/dsl/examples/mydsl.eof
					Expect (Optional Multiple ) Rune: [WS TAB] Range: []
					Returning: github.com/madlitz/dsl/examples/mydsl.Scan
				Expect Token (Optional ): [PLUS MINUS DIVIDE MULTIPLY OPEN_PAREN]
				AST Walk Up
				Returning: github.com/madlitz/dsl/examples/mydsl.operator
			Returning: github.com/madlitz/dsl/examples/mydsl.parenExpression
		Expect Token (Optional ): [WS]
		Expect Token (): [CLOSE_PAREN]
***found [EOF], expected any of [CLOSE_PAREN]
		Returning: github.com/madlitz/dsl/examples/mydsl.call
	Expect Token (Optional ): [WS]
	Skipping Expect as error already found.
	Expect Token (Optional ): [COMMENT]
	Skipping Expect as error already found.
	Expect Token (): [NL EOF]
	Skipping Expect as error already found.
	Returning: github.com/madlitz/dsl/examples/mydsl.assignmentOrCall
Returning: github.com/madlitz/dsl/examples/mydsl.Parse
